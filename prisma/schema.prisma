

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum AuthProvider {
  GOOGLE
  MICROSOFT
  EMAIL
}

model User {
  id            String       @id @default(cuid())
  email         String       @unique
  emailVerified DateTime?
  name          String?
  avatar        String?
  authProvider  AuthProvider
  providerId    String?
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  workspaces    Workspace[]
  userSecret    UserSecret?

  @@map("users")
}

model UserSecret {
  id                    String    @id @default(cuid())
  userId                String    @unique
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  hashedPassword        String?
  emailVerificationOtp  String?
  emailVerificationExp  DateTime?
  passwordResetOtp      String?
  passwordResetExp      DateTime?
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt

  @@map("user_secrets")
}

model Workspace {
  id        String   @id @default(cuid())
  name      String
  slug      String   @unique
  createdBy String
  creator   User     @relation(fields: [createdBy], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  pages     Page[]

  @@map("workspaces")
}

model Page {
  id          String    @id @default(cuid())
  name        String
  slug        String
  workspaceId String
  workspace   Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@unique([workspaceId, slug])
  @@map("pages")
}
